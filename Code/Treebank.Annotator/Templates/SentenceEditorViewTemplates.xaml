<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:graphx="http://schemas.panthernet.ru/graphx/"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:graphX1="clr-namespace:GraphX;assembly=GraphX.WPF.Controls"
                    xmlns:vsm="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    mc:Ignorable="d">

    <Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Height="21.96">
                        <ComboBox x:Name="cbCondition1" ItemsSource="{Binding AllowedValuesSet}" IsEditable="{Binding IsEditable}" IsEnabled="{Binding IsEditable}"
                                  SelectedValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  SelectedValuePath="Model" DisplayMemberPath="Model" />
                        <TextBox x:Name="tbCondition2"
                                 Text="{Binding Value,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox x:Name="tbCondition3"
                                 Text="{Binding Value,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                 IsReadOnly="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsEditable}" Value="True">
                            <Setter Value="Hidden" TargetName="cbCondition1" Property="Visibility" />
                            <Setter Value="Visible" TargetName="tbCondition2" Property="Visibility" />
                            <Setter Value="Hidden" TargetName="tbCondition3" Property="Visibility" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsEditable}" Value="False">
                            <Setter Value="Hidden" TargetName="cbCondition1" Property="Visibility" />
                            <Setter Value="Hidden" TargetName="tbCondition2" Property="Visibility" />
                            <Setter Value="Visible" TargetName="tbCondition3" Property="Visibility" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding HasAllowedValuesSet}" Value="True">
                            <Setter Value="Visible" TargetName="cbCondition1" Property="Visibility" />
                            <Setter Value="Hidden" TargetName="tbCondition2" Property="Visibility" />
                            <Setter Value="Hidden" TargetName="tbCondition3" Property="Visibility" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <LinearGradientBrush x:Key="EdgeBrush" EndPoint="0.5,0" StartPoint="0.5,1" po:Freeze="true">
        <GradientStop Color="#500202" />
        <GradientStop Color="#630303" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NormalBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFFFF" Offset="0" />
        <GradientStop Color="#FFA4ADBB" Offset="0.521" />
        <GradientStop Color="#FFD7E0EA" Offset="0.194" />
        <GradientStop Color="#FFBAC1CF" Offset="0.811" />
        <GradientStop Color="#FFBCC5D5" Offset="0.507" />
        <GradientStop Color="#FFE3E4E6" Offset="1" />
    </LinearGradientBrush>

    <Style x:Key="CirclePath" TargetType="graphx:StaticVertexConnectionPoint" x:Shared="False">
        <Setter Property="Shape" Value="Circle" />

        <Setter Property="Content">
            <Setter.Value>
                <Path Stroke="Gray"
                      Data="M 38,0.791664C 58.5496,0.791664 75.2083,17.4504 75.2083,38C 75.2083,58.5496 58.5496,75.2083 38,75.2083C 17.4504,75.2083 0.791662,58.5496 0.791662,38C 0.791662,17.4504 17.4504,0.791664 38,0.791664 Z M 38,5.54166C 20.0738,5.54166 5.54167,20.0738 5.54167,38C 5.54167,55.9262 20.0738,70.4583 38,70.4583C 55.9262,70.4583 70.4583,55.9262 70.4583,38C 70.4583,20.0738 55.9262,5.54166 38,5.54166 Z "
                      Width="10" Height="10" Stretch="Uniform" StrokeThickness="1" HorizontalAlignment="Center"
                      VerticalAlignment="Center" />
            </Setter.Value>
        </Setter>
    </Style>

    <!-- VERTEX CONTROL -->
    <Style TargetType="{x:Type graphx:VertexControl}">
        <Setter Property="Background" Value="#FFE3E3E3" />
        <Setter Property="BorderThickness" Value="2,2,2,2" />
        <Setter Property="Padding" Value="10,5,10,5" />
        <Setter Property="BorderBrush" Value="#FF393939" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type graphx:VertexControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Vertical">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Name="PART_vcproot">
                                <Border Padding="0" Margin="2,0,0,0" HorizontalAlignment="Center">
                                    <graphx:StaticVertexConnectionPoint Id="1" HorizontalAlignment="Center" />
                                </Border>
                            </StackPanel>
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="5,5,5,5"
                                    Padding="{TemplateBinding Padding}" HorizontalAlignment="Center">
                                <ContentPresenter Content="{TemplateBinding Vertex}" VerticalAlignment="Center"
                                                  HorizontalAlignment="Center" />
                            </Border>

                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ToolTip">
            <Setter.Value>
                <Border BorderBrush="Black" BorderThickness="1" CornerRadius="4"
                        Background="GhostWhite">
                    <DataGrid ItemsSource="{Binding WordWrapper.Attributes}" Margin="0 5 0 0"
                              SelectionUnit="FullRow"
                              AutoGenerateColumns="False" MaxWidth="200">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Name"
                                                Binding="{Binding DisplayName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                Width="Auto" IsReadOnly="True" />
                            <DataGridTemplateColumn CellStyle="{StaticResource DataGridCellStyle1}" Header="Value"
                                                    Width="*" />
                        </DataGrid.Columns>
                    </DataGrid>
                </Border>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="graphX1:GraphAreaBase.PositioningComplete" Value="False">
                <Setter Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="graphx:HighlightBehaviour.Highlighted" Value="True">
                <Setter Property="BorderBrush" Value="#F23106" />
                <Setter Property="BorderThickness" Value="3,3,3,3" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- EDGE CONTROL -->
    <Style TargetType="{x:Type graphx:EdgeControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type graphx:EdgeControl}">
                    <Grid>
                        <Path Stroke="{TemplateBinding Foreground}"
                              StrokeThickness="2" MinWidth="1" MinHeight="1"
                              ToolTip="{TemplateBinding ToolTip}"
                              x:Name="PART_edgePath" />
                        <graphx:DefaultEdgePointer NeedRotation="true" x:Name="PART_EdgePointerForTarget">
                            <Path Name="EdgePointer" Data="M0,0.5 L1,1 1,0" Fill="{TemplateBinding Foreground}"
                                  Stretch="Uniform" Width="10" Height="10" />
                        </graphx:DefaultEdgePointer>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="MinWidth"
                Value="1" />
        <Setter Property="MinHeight"
                Value="1" />
        <Setter Property="Background"
                Value="Red" />
        <Setter Property="Foreground"
                Value="Black" />
        <Setter Property="Opacity"
                Value="1" />
        <Setter Property="graphx:HighlightBehaviour.IsHighlightEnabled" Value="False" />

        <Style.Triggers>
            <Trigger Property="graphx:HighlightBehaviour.Highlighted" Value="True">
                <Setter Property="Foreground" Value="Red" />
                <Setter Property="StrokeThickness" Value="5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- LEFT EDGE CONTROL -->
    <Style x:Key="LeftEdge" TargetType="{x:Type graphx:EdgeControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type graphx:EdgeControl}">
                    <Grid>
                        <Path Stroke="{TemplateBinding Foreground}"
                              StrokeThickness="2" MinWidth="1" MinHeight="1"
                              ToolTip="{TemplateBinding ToolTip}"
                              x:Name="PART_edgePath" />
                        <graphx:DefaultEdgePointer NeedRotation="true" x:Name="PART_EdgePointerForTarget">
                            <Path Name="EdgePointer" Data="M0,0.5 L1,1 1,0" Fill="{TemplateBinding Foreground}"
                                  Stretch="Uniform" Width="10" Height="10" />
                        </graphx:DefaultEdgePointer>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="MinWidth"
                Value="1" />
        <Setter Property="MinHeight"
                Value="1" />
        <Setter Property="Background"
                Value="DarkCyan" />
        <Setter Property="Foreground"
                Value="DarkBlue" />
        <Setter Property="Opacity"
                Value="1" />
        <Setter Property="graphx:HighlightBehaviour.IsHighlightEnabled" Value="False" />

        <Style.Triggers>
            <Trigger Property="graphx:HighlightBehaviour.Highlighted" Value="True">
                <Setter Property="Foreground" Value="DeepSkyBlue" />
                <Setter Property="StrokeThickness" Value="5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- RIGHT EDGE CONTROL -->
    <Style x:Key="RightEdge" TargetType="{x:Type graphx:EdgeControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type graphx:EdgeControl}">
                    <Grid>
                        <Path Stroke="{TemplateBinding Foreground}"
                              StrokeThickness="2" MinWidth="1" MinHeight="1"
                              ToolTip="{TemplateBinding ToolTip}"
                              x:Name="PART_edgePath" />
                        <graphx:DefaultEdgePointer NeedRotation="true" x:Name="PART_EdgePointerForTarget">
                            <Path Name="EdgePointer" Data="M0,0.5 L1,1 1,0" Fill="{TemplateBinding Foreground}"
                                  Stretch="Uniform" Width="10" Height="10" />
                        </graphx:DefaultEdgePointer>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="MinWidth"
                Value="1" />
        <Setter Property="MinHeight"
                Value="1" />
        <Setter Property="Background"
                Value="Bisque" />
        <Setter Property="Foreground"
                Value="Brown" />
        <Setter Property="Opacity"
                Value="1" />
        <Setter Property="graphx:HighlightBehaviour.IsHighlightEnabled" Value="False" />

        <Style.Triggers>
            <Trigger Property="graphx:HighlightBehaviour.Highlighted" Value="True">
                <Setter Property="Foreground" Value="Chartreuse" />
                <Setter Property="StrokeThickness" Value="5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--EDGE LABEL CONTROL -->
    <Style TargetType="{x:Type graphx:AttachableEdgeLabelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type graphx:AttachableEdgeLabelControl}">
                    <Border BorderBrush="Black" BorderThickness="1" Background="White" CornerRadius="4">
                        <ContentPresenter Margin="3"
                                          Content="{Binding AttachNode.Edge.Text, UpdateSourceTrigger=PropertyChanged}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DisplayForSelfLoopedEdges" Value="False" />
    </Style>

    <Style x:Key="ToggleButtonStyle1" TargetType="ToggleButton">
      <Setter Property="Background" Value="#FF1F3B53"/>
      <Setter Property="Foreground" Value="#FF000000"/>
      <Setter Property="Padding" Value="3"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="BorderBrush">
          <Setter.Value>
              <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                  <GradientStop Color="#FFA3AEB9" Offset="0"/>
                  <GradientStop Color="#FF8399A9" Offset="0.375"/>
                  <GradientStop Color="#FF718597" Offset="0.375"/>
                  <GradientStop Color="#FF617584" Offset="1"/>
              </LinearGradientBrush>
          </Setter.Value>
      </Setter>
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="ToggleButton">
                  <Grid>
                      <vsm:VisualStateManager.VisualStateGroups>
                          <vsm:VisualStateGroup x:Name="CommonStates">
                              <vsm:VisualState x:Name="Normal"/>
                              <vsm:VisualState x:Name="MouseOver">
                                  <Storyboard>
                                      <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#F2FFFFFF"/>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#CCFFFFFF"/>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#7FFFFFFF"/>
                                  </Storyboard>
                              </vsm:VisualState>
                              <vsm:VisualState x:Name="Pressed">
                                  <Storyboard>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF6DBDD1"/>
                                      <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#D8FFFFFF"/>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#C6FFFFFF"/>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#8CFFFFFF"/>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#3FFFFFFF"/>
                                  </Storyboard>
                              </vsm:VisualState>
                              <vsm:VisualState x:Name="Disabled">
                                  <Storyboard>
                                      <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To=".55"/>
                                  </Storyboard>
                              </vsm:VisualState>
                          </vsm:VisualStateGroup>
                          <vsm:VisualStateGroup x:Name="CheckStates">
                              <vsm:VisualState x:Name="Checked">
                                  <Storyboard>
                                      <PointAnimation Duration="0" To="0.7,1" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.StartPoint)"/>
                                      <PointAnimation Duration="0" To="0.7,0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.EndPoint)"/>
                                  </Storyboard>
                              </vsm:VisualState>
                              <vsm:VisualState x:Name="Unchecked"/>
                          </vsm:VisualStateGroup>
                          <vsm:VisualStateGroup x:Name="FocusStates">
                              <vsm:VisualState x:Name="Focused">
                                  <Storyboard>
                                      <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1"/>
                                  </Storyboard>
                              </vsm:VisualState>
                              <vsm:VisualState x:Name="Unfocused" />
                          </vsm:VisualStateGroup>
                      </vsm:VisualStateManager.VisualStateGroups>
                      <Border x:Name="Background" CornerRadius="3" Background="White" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                          <Grid Background="{TemplateBinding Background}"  Margin="1">
                              <Border Opacity="0"  x:Name="BackgroundAnimation" Background="#FF448DCA" />
                              <Rectangle x:Name="BackgroundGradient" >
                                  <Rectangle.Fill>
                                      <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                          <GradientStop Color="#FFFFFFFF" Offset="0" />
                                          <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                          <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                          <GradientStop Color="#C6FFFFFF" Offset="1" />
                                      </LinearGradientBrush>
                                  </Rectangle.Fill>
                              </Rectangle>
                          </Grid>
                      </Border>
                      <ContentPresenter
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>
                      <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="#FFFFFFFF" Opacity="0" IsHitTestVisible="false" />
                      <Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="1" Stroke="#FF6DBDD1" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
                  </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="BorderThickness" Value="2"></Setter>
                            <Setter Property="Background" Value="#FA0808"/>
                            <Setter Property="Opacity" Value="1"/>
                            <Setter Property="ToolTip" Value="Click the button to deactivate the option"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>
</ResourceDictionary>